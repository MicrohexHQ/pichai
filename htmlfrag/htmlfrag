<html>
    <script>
    var mobile = false;
    if (screen.width <= 699) {
        mobile = true;
    }
    function isNumber(c) {
        return !isNaN(parseInt(c, 16))
    }
    function setPin(c, b) {
        var d = document.getElementById(c).getContext("2d");
        d.fillStyle = b;
        d.fillRect(0, 0, 10, 10)
    }
    function generatePortHtml(c, b) {
        var d = 8 * c,
        g = '<div style="display: table-row">';
        for (i = 0; 8 > i; i++) {
            var e = parseInt(d + i),
            g = g + ('<div style="display: table-cell;">  <canvas id="pin' + e + '" width="10" height="10"/> </div>');
            0 < (1 << i & b) && (g += '<script>setPin("pin' + e + '", "#FF0000");\x3c/script>')
        }
        return g + "</div>"
    }
    function generateRegisterHtml(c) {
        return '<textarea id="register' + c + '" rows="1" cols="4">0x00</textarea>'
    }
    function generateFillerHtml() {
        return '<div style="display: table-cell;"><canvas width="10" height="10"/></div>'
    }
    function memoryDump() {
        document.getElementById("uart").value = "";
        var c = document.getElementById("memoryAddress");
        for (i = 0; 10 > i; i++) {
            var b = null;
            try {
                b = parseInt(c.value.substring(2), 16)
            } catch (d) {} finally {
                isNumber(b) || (b = PC), byteValue = readMemory(b - 5 + i).toString(16)
            }
            1 == byteValue.length && writeUARTDataRegister(48);
            writeUARTDataRegister(byteValue.substring(0, 1).charCodeAt(0));
            1 < byteValue.length && writeUARTDataRegister(byteValue.substring(1, 2).charCodeAt(0));
            writeUARTDataRegister(32)
        }
        c.value = "0x" + (PC - flashStart).toString(16)
    }
    </script>
    <style>
        html, body {
            height: 100%;
        }
        html {
            display: table;
            margin: auto;
        }
        body {
            display: table-cell;
            vertical-align: middle;
            background-color: black;
        }
    </style>
    <body>
    <div style="padding: 2px; border: 2px solid white; background-color: #00979C;" id="sources">
    <div id="sources">
        <script>
            var options = {
                success: function(files) {
                    var url = files[0].link;
                    var client = new XMLHttpRequest();
                    client.open("GET", url, true);
                    client.setRequestHeader("Content-Type", "text/plain");
                    client.onreadystatechange = function(){
                        if (client.readyState==4 && client.status==200)
                        {
                            loadMemory(client.responseText);
                            engineInit();
                            isPaused = true;
                            exec();
                        }
                    }
                    client.send();
                },
                linkType: "direct",
                extensions: ['.hex'],
            };
            document.getElementById("sources").appendChild(Dropbox.createChooseButton(options));
        </script>
    </div>
    <br/>
    <br/>
    <table style="border-spacing: 0px; width:160px; height:128">
        <script>
            var colset = 0;
            var rowset = 0;
            var datasent = 0;
            function normalize(value){
                return value.length == 2 ? value: "0"+ value;
            }
            function peripheralSPIWrite(c){
                if(((readMemory(portE) & 0x40) == 0)
                   && ((readMemory(portD) & 0x4) == 0)){
                    if(c == 0x2A){
                        colset = 4;
                    }else if(c == 0x2B){
                        rowset = 4;
                    }
                }else if(((readMemory(portE) & 0x40) == 0)
                   && ((readMemory(portD) & 0x4) != 0)){
                    if(colset > 0){
                        switch(colset){
                            case 4:
                                writeMemory(0x7FF7, c);
                                break;
                            case 3:
                                writeMemory(0x7FF6, c);
                                break;
                            case 2:
                                writeMemory(0x7FF9, c);
                                break;
                            case 1:
                                writeMemory(0x7FF8, c);
                                break;
                        }
                        colset--;
                    }
                    else if(rowset > 0){
                        switch(rowset){
                            case 4:
                                writeMemory(0x7FFB, c);
                                break;
                            case 3:
                                writeMemory(0x7FFA, c);
                                break;
                            case 2:
                                writeMemory(0x7FFD, c);
                                break;
                            case 1:
                                writeMemory(0x7FFC, c);
                                break;
                        }
                        rowset--;
                    }
                    else{
                        if(datasent % 2 == 0){
                            writeMemory(0x7FFF, c);
                        }else{
                            writeMemory(0x7FFE, c);
                        }
                        datasent++;
                    }
                }
            }
            function drawPixel(x, y, color){
                try{
                    var id = normalize(x.toString(16));
                    id+=normalize(y.toString(16));
                    var element = document.getElementById(id);
                    element.style.background = color;
                }catch(e){}
            }
            for(var j =0; j < 128; j++){
                document.write("<tr>");
                for(var i =0; i < 160; i++){
                    var id = normalize(i.toString(16));
                    id+=normalize(j.toString(16));
                    document.write("<td id=\""+id+"\" style=\"background-color: black;\"></td>");
                }
                document.write("</tr>");
            }
        </script>
    </table>
